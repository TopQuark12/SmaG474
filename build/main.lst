ARM GAS  /tmp/ccUGSQx0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.global	SystemClock_Config
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SystemClock_Config:
  27              	.LFB407:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "dac.h"
  25:Src/main.c    **** #include "dma.h"
  26:Src/main.c    **** #include "tim.h"
  27:Src/main.c    **** #include "usart.h"
  28:Src/main.c    **** #include "gpio.h"
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
ARM GAS  /tmp/ccUGSQx0.s 			page 2


  31:Src/main.c    **** /* USER CODE BEGIN Includes */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END Includes */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PTD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PD */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  46:Src/main.c    **** /* USER CODE BEGIN PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PM */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE BEGIN PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE END PV */
  55:Src/main.c    **** 
  56:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  57:Src/main.c    **** void SystemClock_Config(void);
  58:Src/main.c    **** /* USER CODE BEGIN PFP */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PFP */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  63:Src/main.c    **** /* USER CODE BEGIN 0 */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END 0 */
  66:Src/main.c    **** 
  67:Src/main.c    **** /**
  68:Src/main.c    ****   * @brief  The application entry point.
  69:Src/main.c    ****   * @retval int
  70:Src/main.c    ****   */
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
  74:Src/main.c    **** 
  75:Src/main.c    ****   /* USER CODE END 1 */
  76:Src/main.c    ****   
  77:Src/main.c    **** 
  78:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  79:Src/main.c    **** 
  80:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Src/main.c    ****   HAL_Init();
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* USER CODE BEGIN Init */
  84:Src/main.c    **** 
  85:Src/main.c    ****   /* USER CODE END Init */
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /tmp/ccUGSQx0.s 			page 3


  88:Src/main.c    ****   SystemClock_Config();
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* USER CODE END SysInit */
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* Initialize all configured peripherals */
  95:Src/main.c    ****   MX_GPIO_Init();
  96:Src/main.c    ****   MX_DMA_Init();
  97:Src/main.c    ****   MX_ADC1_Init();
  98:Src/main.c    ****   MX_DAC1_Init();
  99:Src/main.c    ****   MX_TIM6_Init();
 100:Src/main.c    ****   MX_USART1_UART_Init();
 101:Src/main.c    ****   /* USER CODE BEGIN 2 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* USER CODE END 2 */
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* Infinite loop */
 106:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 107:Src/main.c    ****   while (1)
 108:Src/main.c    ****   {
 109:Src/main.c    ****     /* USER CODE END WHILE */
 110:Src/main.c    **** 
 111:Src/main.c    ****     /* USER CODE BEGIN 3 */
 112:Src/main.c    ****   }
 113:Src/main.c    ****   /* USER CODE END 3 */
 114:Src/main.c    **** }
 115:Src/main.c    **** 
 116:Src/main.c    **** /**
 117:Src/main.c    ****   * @brief System Clock Configuration
 118:Src/main.c    ****   * @retval None
 119:Src/main.c    ****   */
 120:Src/main.c    **** void SystemClock_Config(void)
 121:Src/main.c    **** {
  29              		.loc 1 121 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 160
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 30B5     		push	{r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 A9B0     		sub	sp, sp, #164
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 176
 122:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  42              		.loc 1 122 3 view .LVU1
  43              		.loc 1 122 22 is_stmt 0 view .LVU2
  44 0004 3822     		movs	r2, #56
  45 0006 0021     		movs	r1, #0
  46 0008 1AA8     		add	r0, sp, #104
  47 000a FFF7FEFF 		bl	memset
  48              	.LVL0:
 123:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  49              		.loc 1 123 3 is_stmt 1 view .LVU3
ARM GAS  /tmp/ccUGSQx0.s 			page 4


  50              		.loc 1 123 22 is_stmt 0 view .LVU4
  51 000e 0024     		movs	r4, #0
  52 0010 1594     		str	r4, [sp, #84]
  53 0012 1694     		str	r4, [sp, #88]
  54 0014 1794     		str	r4, [sp, #92]
  55 0016 1894     		str	r4, [sp, #96]
  56 0018 1994     		str	r4, [sp, #100]
 124:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  57              		.loc 1 124 3 is_stmt 1 view .LVU5
  58              		.loc 1 124 28 is_stmt 0 view .LVU6
  59 001a 5422     		movs	r2, #84
  60 001c 2146     		mov	r1, r4
  61 001e 6846     		mov	r0, sp
  62 0020 FFF7FEFF 		bl	memset
  63              	.LVL1:
 125:Src/main.c    **** 
 126:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 127:Src/main.c    ****   */
 128:Src/main.c    ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
  64              		.loc 1 128 3 is_stmt 1 view .LVU7
  65 0024 2046     		mov	r0, r4
  66 0026 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  67              	.LVL2:
 129:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 130:Src/main.c    ****   */
 131:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  68              		.loc 1 131 3 view .LVU8
  69              		.loc 1 131 36 is_stmt 0 view .LVU9
  70 002a 0123     		movs	r3, #1
  71 002c 1A93     		str	r3, [sp, #104]
 132:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  72              		.loc 1 132 3 is_stmt 1 view .LVU10
  73              		.loc 1 132 30 is_stmt 0 view .LVU11
  74 002e 4FF48033 		mov	r3, #65536
  75 0032 1B93     		str	r3, [sp, #108]
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  76              		.loc 1 133 3 is_stmt 1 view .LVU12
  77              		.loc 1 133 34 is_stmt 0 view .LVU13
  78 0034 0223     		movs	r3, #2
  79 0036 2193     		str	r3, [sp, #132]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  80              		.loc 1 134 3 is_stmt 1 view .LVU14
  81              		.loc 1 134 35 is_stmt 0 view .LVU15
  82 0038 0325     		movs	r5, #3
  83 003a 2295     		str	r5, [sp, #136]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV6;
  84              		.loc 1 135 3 is_stmt 1 view .LVU16
  85              		.loc 1 135 30 is_stmt 0 view .LVU17
  86 003c 0622     		movs	r2, #6
  87 003e 2392     		str	r2, [sp, #140]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 85;
  88              		.loc 1 136 3 is_stmt 1 view .LVU18
  89              		.loc 1 136 30 is_stmt 0 view .LVU19
  90 0040 5522     		movs	r2, #85
  91 0042 2492     		str	r2, [sp, #144]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  92              		.loc 1 137 3 is_stmt 1 view .LVU20
ARM GAS  /tmp/ccUGSQx0.s 			page 5


  93              		.loc 1 137 30 is_stmt 0 view .LVU21
  94 0044 2593     		str	r3, [sp, #148]
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  95              		.loc 1 138 3 is_stmt 1 view .LVU22
  96              		.loc 1 138 30 is_stmt 0 view .LVU23
  97 0046 2693     		str	r3, [sp, #152]
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  98              		.loc 1 139 3 is_stmt 1 view .LVU24
  99              		.loc 1 139 30 is_stmt 0 view .LVU25
 100 0048 2793     		str	r3, [sp, #156]
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 101              		.loc 1 140 3 is_stmt 1 view .LVU26
 102              		.loc 1 140 7 is_stmt 0 view .LVU27
 103 004a 1AA8     		add	r0, sp, #104
 104 004c FFF7FEFF 		bl	HAL_RCC_OscConfig
 105              	.LVL3:
 141:Src/main.c    ****   {
 142:Src/main.c    ****     Error_Handler();
 143:Src/main.c    ****   }
 144:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****   */
 146:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 106              		.loc 1 146 3 is_stmt 1 view .LVU28
 107              		.loc 1 146 31 is_stmt 0 view .LVU29
 108 0050 0F23     		movs	r3, #15
 109 0052 1593     		str	r3, [sp, #84]
 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 148:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 110              		.loc 1 148 3 is_stmt 1 view .LVU30
 111              		.loc 1 148 34 is_stmt 0 view .LVU31
 112 0054 1695     		str	r5, [sp, #88]
 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 113              		.loc 1 149 3 is_stmt 1 view .LVU32
 114              		.loc 1 149 35 is_stmt 0 view .LVU33
 115 0056 1794     		str	r4, [sp, #92]
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 116              		.loc 1 150 3 is_stmt 1 view .LVU34
 117              		.loc 1 150 36 is_stmt 0 view .LVU35
 118 0058 1894     		str	r4, [sp, #96]
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 119              		.loc 1 151 3 is_stmt 1 view .LVU36
 120              		.loc 1 151 36 is_stmt 0 view .LVU37
 121 005a 1994     		str	r4, [sp, #100]
 152:Src/main.c    **** 
 153:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_8) != HAL_OK)
 122              		.loc 1 153 3 is_stmt 1 view .LVU38
 123              		.loc 1 153 7 is_stmt 0 view .LVU39
 124 005c 0821     		movs	r1, #8
 125 005e 15A8     		add	r0, sp, #84
 126 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 127              	.LVL4:
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    ****   /** Initializes the peripherals clocks 
 158:Src/main.c    ****   */
 159:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_ADC12;
ARM GAS  /tmp/ccUGSQx0.s 			page 6


 128              		.loc 1 159 3 is_stmt 1 view .LVU40
 129              		.loc 1 159 38 is_stmt 0 view .LVU41
 130 0064 48F20103 		movw	r3, #32769
 131 0068 0093     		str	r3, [sp]
 160:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 132              		.loc 1 160 3 is_stmt 1 view .LVU42
 133              		.loc 1 160 38 is_stmt 0 view .LVU43
 134 006a 0194     		str	r4, [sp, #4]
 161:Src/main.c    ****   PeriphClkInit.Adc12ClockSelection = RCC_ADC12CLKSOURCE_SYSCLK;
 135              		.loc 1 161 3 is_stmt 1 view .LVU44
 136              		.loc 1 161 37 is_stmt 0 view .LVU45
 137 006c 4FF00053 		mov	r3, #536870912
 138 0070 1193     		str	r3, [sp, #68]
 162:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 139              		.loc 1 162 3 is_stmt 1 view .LVU46
 140              		.loc 1 162 7 is_stmt 0 view .LVU47
 141 0072 6846     		mov	r0, sp
 142 0074 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 143              	.LVL5:
 163:Src/main.c    ****   {
 164:Src/main.c    ****     Error_Handler();
 165:Src/main.c    ****   }
 166:Src/main.c    **** }
 144              		.loc 1 166 1 view .LVU48
 145 0078 29B0     		add	sp, sp, #164
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 12
 148              		@ sp needed
 149 007a 30BD     		pop	{r4, r5, pc}
 150              		.cfi_endproc
 151              	.LFE407:
 153              		.section	.text.main,"ax",%progbits
 154              		.align	1
 155              		.global	main
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	main:
 162              	.LFB406:
  72:Src/main.c    ****   /* USER CODE BEGIN 1 */
 163              		.loc 1 72 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ Volatile: function does not return.
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 08B5     		push	{r3, lr}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 3, -8
 172              		.cfi_offset 14, -4
  81:Src/main.c    **** 
 173              		.loc 1 81 3 view .LVU50
 174 0002 FFF7FEFF 		bl	HAL_Init
 175              	.LVL6:
  88:Src/main.c    **** 
 176              		.loc 1 88 3 view .LVU51
ARM GAS  /tmp/ccUGSQx0.s 			page 7


 177 0006 FFF7FEFF 		bl	SystemClock_Config
 178              	.LVL7:
  95:Src/main.c    ****   MX_DMA_Init();
 179              		.loc 1 95 3 view .LVU52
 180 000a FFF7FEFF 		bl	MX_GPIO_Init
 181              	.LVL8:
  96:Src/main.c    ****   MX_ADC1_Init();
 182              		.loc 1 96 3 view .LVU53
 183 000e FFF7FEFF 		bl	MX_DMA_Init
 184              	.LVL9:
  97:Src/main.c    ****   MX_DAC1_Init();
 185              		.loc 1 97 3 view .LVU54
 186 0012 FFF7FEFF 		bl	MX_ADC1_Init
 187              	.LVL10:
  98:Src/main.c    ****   MX_TIM6_Init();
 188              		.loc 1 98 3 view .LVU55
 189 0016 FFF7FEFF 		bl	MX_DAC1_Init
 190              	.LVL11:
  99:Src/main.c    ****   MX_USART1_UART_Init();
 191              		.loc 1 99 3 view .LVU56
 192 001a FFF7FEFF 		bl	MX_TIM6_Init
 193              	.LVL12:
 100:Src/main.c    ****   /* USER CODE BEGIN 2 */
 194              		.loc 1 100 3 view .LVU57
 195 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 196              	.LVL13:
 197              	.L4:
 107:Src/main.c    ****   {
 198              		.loc 1 107 3 discriminator 1 view .LVU58
 112:Src/main.c    ****   /* USER CODE END 3 */
 199              		.loc 1 112 3 discriminator 1 view .LVU59
 200 0022 FEE7     		b	.L4
 201              		.cfi_endproc
 202              	.LFE406:
 204              		.section	.text.Error_Handler,"ax",%progbits
 205              		.align	1
 206              		.global	Error_Handler
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	Error_Handler:
 213              	.LFB408:
 167:Src/main.c    **** 
 168:Src/main.c    **** /* USER CODE BEGIN 4 */
 169:Src/main.c    **** 
 170:Src/main.c    **** /* USER CODE END 4 */
 171:Src/main.c    **** 
 172:Src/main.c    **** /**
 173:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 174:Src/main.c    ****   * @retval None
 175:Src/main.c    ****   */
 176:Src/main.c    **** void Error_Handler(void)
 177:Src/main.c    **** {
 214              		.loc 1 177 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccUGSQx0.s 			page 8


 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		@ link register save eliminated.
 178:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 179:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 182:Src/main.c    **** }
 219              		.loc 1 182 1 view .LVU61
 220 0000 7047     		bx	lr
 221              		.cfi_endproc
 222              	.LFE408:
 224              		.text
 225              	.Letext0:
 226              		.file 2 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_t
 227              		.file 3 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 228              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 229              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 230              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 231              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 232              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 233              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 234              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc_ex.h"
 235              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 236              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 237              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dac.h"
 238              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 239              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 240              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 241              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 242              		.file 18 "Inc/adc.h"
 243              		.file 19 "Inc/dac.h"
 244              		.file 20 "Inc/tim.h"
 245              		.file 21 "Inc/usart.h"
 246              		.file 22 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 247              		.file 23 "Inc/gpio.h"
 248              		.file 24 "Inc/dma.h"
 249              		.file 25 "<built-in>"
ARM GAS  /tmp/ccUGSQx0.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccUGSQx0.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccUGSQx0.s:26     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccUGSQx0.s:154    .text.main:0000000000000000 $t
     /tmp/ccUGSQx0.s:161    .text.main:0000000000000000 main
     /tmp/ccUGSQx0.s:205    .text.Error_Handler:0000000000000000 $t
     /tmp/ccUGSQx0.s:212    .text.Error_Handler:0000000000000000 Error_Handler

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_DAC1_Init
MX_TIM6_Init
MX_USART1_UART_Init
