ARM GAS  /tmp/ccBDX3d5.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	MX_ADC1_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB406:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * @attention
   8:Src/adc.c     ****   *
   9:Src/adc.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/adc.c     ****   * All rights reserved.</center></h2>
  11:Src/adc.c     ****   *
  12:Src/adc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/adc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/adc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/adc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** 
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  29:Src/adc.c     **** 
  30:Src/adc.c     **** /* ADC1 init function */
ARM GAS  /tmp/ccBDX3d5.s 			page 2


  31:Src/adc.c     **** void MX_ADC1_Init(void)
  32:Src/adc.c     **** {
  29              		.loc 1 32 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 48
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 8CB0     		sub	sp, sp, #48
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
  33:Src/adc.c     ****   ADC_MultiModeTypeDef multimode = {0};
  41              		.loc 1 33 3 view .LVU1
  42              		.loc 1 33 24 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0994     		str	r4, [sp, #36]
  45 0008 0A94     		str	r4, [sp, #40]
  46 000a 0B94     		str	r4, [sp, #44]
  34:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  47              		.loc 1 34 3 is_stmt 1 view .LVU3
  48              		.loc 1 34 26 is_stmt 0 view .LVU4
  49 000c 2022     		movs	r2, #32
  50 000e 2146     		mov	r1, r4
  51 0010 01A8     		add	r0, sp, #4
  52 0012 FFF7FEFF 		bl	memset
  53              	.LVL0:
  35:Src/adc.c     **** 
  36:Src/adc.c     ****   /** Common config 
  37:Src/adc.c     ****   */
  38:Src/adc.c     ****   hadc1.Instance = ADC1;
  54              		.loc 1 38 3 is_stmt 1 view .LVU5
  55              		.loc 1 38 18 is_stmt 0 view .LVU6
  56 0016 2948     		ldr	r0, .L11
  57 0018 4FF0A043 		mov	r3, #1342177280
  58 001c 0360     		str	r3, [r0]
  39:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  59              		.loc 1 39 3 is_stmt 1 view .LVU7
  60              		.loc 1 39 29 is_stmt 0 view .LVU8
  61 001e 4460     		str	r4, [r0, #4]
  40:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
  62              		.loc 1 40 3 is_stmt 1 view .LVU9
  63              		.loc 1 40 25 is_stmt 0 view .LVU10
  64 0020 8460     		str	r4, [r0, #8]
  41:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  65              		.loc 1 41 3 is_stmt 1 view .LVU11
  66              		.loc 1 41 24 is_stmt 0 view .LVU12
  67 0022 C460     		str	r4, [r0, #12]
  42:Src/adc.c     ****   hadc1.Init.GainCompensation = 0;
  68              		.loc 1 42 3 is_stmt 1 view .LVU13
  69              		.loc 1 42 31 is_stmt 0 view .LVU14
  70 0024 0461     		str	r4, [r0, #16]
  43:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  71              		.loc 1 43 3 is_stmt 1 view .LVU15
  72              		.loc 1 43 27 is_stmt 0 view .LVU16
ARM GAS  /tmp/ccBDX3d5.s 			page 3


  73 0026 0123     		movs	r3, #1
  74 0028 4361     		str	r3, [r0, #20]
  44:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  75              		.loc 1 44 3 is_stmt 1 view .LVU17
  76              		.loc 1 44 27 is_stmt 0 view .LVU18
  77 002a 0422     		movs	r2, #4
  78 002c 8261     		str	r2, [r0, #24]
  45:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  79              		.loc 1 45 3 is_stmt 1 view .LVU19
  80              		.loc 1 45 31 is_stmt 0 view .LVU20
  81 002e 0477     		strb	r4, [r0, #28]
  46:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = DISABLE;
  82              		.loc 1 46 3 is_stmt 1 view .LVU21
  83              		.loc 1 46 33 is_stmt 0 view .LVU22
  84 0030 4477     		strb	r4, [r0, #29]
  47:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 2;
  85              		.loc 1 47 3 is_stmt 1 view .LVU23
  86              		.loc 1 47 30 is_stmt 0 view .LVU24
  87 0032 0222     		movs	r2, #2
  88 0034 0262     		str	r2, [r0, #32]
  48:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  89              		.loc 1 48 3 is_stmt 1 view .LVU25
  90              		.loc 1 48 36 is_stmt 0 view .LVU26
  91 0036 80F82440 		strb	r4, [r0, #36]
  49:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIG_T6_TRGO;
  92              		.loc 1 49 3 is_stmt 1 view .LVU27
  93              		.loc 1 49 31 is_stmt 0 view .LVU28
  94 003a 4FF4B462 		mov	r2, #1440
  95 003e C262     		str	r2, [r0, #44]
  50:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
  96              		.loc 1 50 3 is_stmt 1 view .LVU29
  97              		.loc 1 50 35 is_stmt 0 view .LVU30
  98 0040 4FF48062 		mov	r2, #1024
  99 0044 0263     		str	r2, [r0, #48]
  51:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 100              		.loc 1 51 3 is_stmt 1 view .LVU31
 101              		.loc 1 51 36 is_stmt 0 view .LVU32
 102 0046 80F83840 		strb	r4, [r0, #56]
  52:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 103              		.loc 1 52 3 is_stmt 1 view .LVU33
 104              		.loc 1 52 22 is_stmt 0 view .LVU34
 105 004a C463     		str	r4, [r0, #60]
  53:Src/adc.c     ****   hadc1.Init.OversamplingMode = ENABLE;
 106              		.loc 1 53 3 is_stmt 1 view .LVU35
 107              		.loc 1 53 31 is_stmt 0 view .LVU36
 108 004c 80F84030 		strb	r3, [r0, #64]
  54:Src/adc.c     ****   hadc1.Init.Oversampling.Ratio = ADC_OVERSAMPLING_RATIO_256;
 109              		.loc 1 54 3 is_stmt 1 view .LVU37
 110              		.loc 1 54 33 is_stmt 0 view .LVU38
 111 0050 1C22     		movs	r2, #28
 112 0052 4264     		str	r2, [r0, #68]
  55:Src/adc.c     ****   hadc1.Init.Oversampling.RightBitShift = ADC_RIGHTBITSHIFT_4;
 113              		.loc 1 55 3 is_stmt 1 view .LVU39
 114              		.loc 1 55 41 is_stmt 0 view .LVU40
 115 0054 8022     		movs	r2, #128
 116 0056 8264     		str	r2, [r0, #72]
  56:Src/adc.c     ****   hadc1.Init.Oversampling.TriggeredMode = ADC_TRIGGEREDMODE_SINGLE_TRIGGER;
ARM GAS  /tmp/ccBDX3d5.s 			page 4


 117              		.loc 1 56 3 is_stmt 1 view .LVU41
 118              		.loc 1 56 41 is_stmt 0 view .LVU42
 119 0058 C464     		str	r4, [r0, #76]
  57:Src/adc.c     ****   hadc1.Init.Oversampling.OversamplingStopReset = ADC_REGOVERSAMPLING_CONTINUED_MODE;
 120              		.loc 1 57 3 is_stmt 1 view .LVU43
 121              		.loc 1 57 49 is_stmt 0 view .LVU44
 122 005a 0365     		str	r3, [r0, #80]
  58:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 123              		.loc 1 58 3 is_stmt 1 view .LVU45
 124              		.loc 1 58 7 is_stmt 0 view .LVU46
 125 005c FFF7FEFF 		bl	HAL_ADC_Init
 126              	.LVL1:
 127              		.loc 1 58 6 view .LVU47
 128 0060 00BB     		cbnz	r0, .L7
 129              	.L2:
  59:Src/adc.c     ****   {
  60:Src/adc.c     ****     Error_Handler();
  61:Src/adc.c     ****   }
  62:Src/adc.c     ****   /** Configure the ADC multi-mode 
  63:Src/adc.c     ****   */
  64:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 130              		.loc 1 64 3 is_stmt 1 view .LVU48
 131              		.loc 1 64 18 is_stmt 0 view .LVU49
 132 0062 0023     		movs	r3, #0
 133 0064 0993     		str	r3, [sp, #36]
  65:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 134              		.loc 1 65 3 is_stmt 1 view .LVU50
 135              		.loc 1 65 7 is_stmt 0 view .LVU51
 136 0066 09A9     		add	r1, sp, #36
 137 0068 1448     		ldr	r0, .L11
 138 006a FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 139              	.LVL2:
 140              		.loc 1 65 6 view .LVU52
 141 006e E0B9     		cbnz	r0, .L8
 142              	.L3:
  66:Src/adc.c     ****   {
  67:Src/adc.c     ****     Error_Handler();
  68:Src/adc.c     ****   }
  69:Src/adc.c     ****   /** Configure Regular Channel 
  70:Src/adc.c     ****   */
  71:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
 143              		.loc 1 71 3 is_stmt 1 view .LVU53
 144              		.loc 1 71 19 is_stmt 0 view .LVU54
 145 0070 134B     		ldr	r3, .L11+4
 146 0072 0193     		str	r3, [sp, #4]
  72:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 147              		.loc 1 72 3 is_stmt 1 view .LVU55
 148              		.loc 1 72 16 is_stmt 0 view .LVU56
 149 0074 0623     		movs	r3, #6
 150 0076 0293     		str	r3, [sp, #8]
  73:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_92CYCLES_5;
 151              		.loc 1 73 3 is_stmt 1 view .LVU57
 152              		.loc 1 73 24 is_stmt 0 view .LVU58
 153 0078 0523     		movs	r3, #5
 154 007a 0393     		str	r3, [sp, #12]
  74:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 155              		.loc 1 74 3 is_stmt 1 view .LVU59
ARM GAS  /tmp/ccBDX3d5.s 			page 5


 156              		.loc 1 74 22 is_stmt 0 view .LVU60
 157 007c 7F23     		movs	r3, #127
 158 007e 0493     		str	r3, [sp, #16]
  75:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 159              		.loc 1 75 3 is_stmt 1 view .LVU61
 160              		.loc 1 75 24 is_stmt 0 view .LVU62
 161 0080 0423     		movs	r3, #4
 162 0082 0593     		str	r3, [sp, #20]
  76:Src/adc.c     ****   sConfig.Offset = 0;
 163              		.loc 1 76 3 is_stmt 1 view .LVU63
 164              		.loc 1 76 18 is_stmt 0 view .LVU64
 165 0084 0023     		movs	r3, #0
 166 0086 0693     		str	r3, [sp, #24]
  77:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 167              		.loc 1 77 3 is_stmt 1 view .LVU65
 168              		.loc 1 77 7 is_stmt 0 view .LVU66
 169 0088 01A9     		add	r1, sp, #4
 170 008a 0C48     		ldr	r0, .L11
 171 008c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 172              	.LVL3:
 173              		.loc 1 77 6 view .LVU67
 174 0090 70B9     		cbnz	r0, .L9
 175              	.L4:
  78:Src/adc.c     ****   {
  79:Src/adc.c     ****     Error_Handler();
  80:Src/adc.c     ****   }
  81:Src/adc.c     ****   /** Configure Regular Channel 
  82:Src/adc.c     ****   */
  83:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 176              		.loc 1 83 3 is_stmt 1 view .LVU68
 177              		.loc 1 83 16 is_stmt 0 view .LVU69
 178 0092 0C23     		movs	r3, #12
 179 0094 0293     		str	r3, [sp, #8]
  84:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 180              		.loc 1 84 3 is_stmt 1 view .LVU70
 181              		.loc 1 84 7 is_stmt 0 view .LVU71
 182 0096 01A9     		add	r1, sp, #4
 183 0098 0848     		ldr	r0, .L11
 184 009a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 185              	.LVL4:
 186              		.loc 1 84 6 view .LVU72
 187 009e 50B9     		cbnz	r0, .L10
 188              	.L1:
  85:Src/adc.c     ****   {
  86:Src/adc.c     ****     Error_Handler();
  87:Src/adc.c     ****   }
  88:Src/adc.c     **** 
  89:Src/adc.c     **** }
 189              		.loc 1 89 1 view .LVU73
 190 00a0 0CB0     		add	sp, sp, #48
 191              	.LCFI2:
 192              		.cfi_remember_state
 193              		.cfi_def_cfa_offset 8
 194              		@ sp needed
 195 00a2 10BD     		pop	{r4, pc}
 196              	.L7:
 197              	.LCFI3:
ARM GAS  /tmp/ccBDX3d5.s 			page 6


 198              		.cfi_restore_state
  60:Src/adc.c     ****   }
 199              		.loc 1 60 5 is_stmt 1 view .LVU74
 200 00a4 FFF7FEFF 		bl	Error_Handler
 201              	.LVL5:
 202 00a8 DBE7     		b	.L2
 203              	.L8:
  67:Src/adc.c     ****   }
 204              		.loc 1 67 5 view .LVU75
 205 00aa FFF7FEFF 		bl	Error_Handler
 206              	.LVL6:
 207 00ae DFE7     		b	.L3
 208              	.L9:
  79:Src/adc.c     ****   }
 209              		.loc 1 79 5 view .LVU76
 210 00b0 FFF7FEFF 		bl	Error_Handler
 211              	.LVL7:
 212 00b4 EDE7     		b	.L4
 213              	.L10:
  86:Src/adc.c     ****   }
 214              		.loc 1 86 5 view .LVU77
 215 00b6 FFF7FEFF 		bl	Error_Handler
 216              	.LVL8:
 217              		.loc 1 89 1 is_stmt 0 view .LVU78
 218 00ba F1E7     		b	.L1
 219              	.L12:
 220              		.align	2
 221              	.L11:
 222 00bc 00000000 		.word	hadc1
 223 00c0 02003004 		.word	70254594
 224              		.cfi_endproc
 225              	.LFE406:
 227              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 228              		.align	1
 229              		.global	HAL_ADC_MspInit
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu fpv4-sp-d16
 235              	HAL_ADC_MspInit:
 236              	.LVL9:
 237              	.LFB407:
  90:Src/adc.c     **** 
  91:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  92:Src/adc.c     **** {
 238              		.loc 1 92 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 32
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		.loc 1 92 1 is_stmt 0 view .LVU80
 243 0000 10B5     		push	{r4, lr}
 244              	.LCFI4:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 248 0002 88B0     		sub	sp, sp, #32
 249              	.LCFI5:
ARM GAS  /tmp/ccBDX3d5.s 			page 7


 250              		.cfi_def_cfa_offset 40
  93:Src/adc.c     **** 
  94:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 251              		.loc 1 94 3 is_stmt 1 view .LVU81
 252              		.loc 1 94 20 is_stmt 0 view .LVU82
 253 0004 0023     		movs	r3, #0
 254 0006 0393     		str	r3, [sp, #12]
 255 0008 0493     		str	r3, [sp, #16]
 256 000a 0593     		str	r3, [sp, #20]
 257 000c 0693     		str	r3, [sp, #24]
 258 000e 0793     		str	r3, [sp, #28]
  95:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 259              		.loc 1 95 3 is_stmt 1 view .LVU83
 260              		.loc 1 95 15 is_stmt 0 view .LVU84
 261 0010 0368     		ldr	r3, [r0]
 262              		.loc 1 95 5 view .LVU85
 263 0012 B3F1A04F 		cmp	r3, #1342177280
 264 0016 01D0     		beq	.L17
 265              	.LVL10:
 266              	.L13:
  96:Src/adc.c     ****   {
  97:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  98:Src/adc.c     **** 
  99:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
 100:Src/adc.c     ****     /* ADC1 clock enable */
 101:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_ENABLE();
 102:Src/adc.c     ****   
 103:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 104:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 105:Src/adc.c     ****     PA0     ------> ADC1_IN1
 106:Src/adc.c     ****     PA1     ------> ADC1_IN2 
 107:Src/adc.c     ****     */
 108:Src/adc.c     ****     GPIO_InitStruct.Pin = Vsen_Pin|Isen_Pin;
 109:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 110:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 111:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 112:Src/adc.c     **** 
 113:Src/adc.c     ****     /* ADC1 DMA Init */
 114:Src/adc.c     ****     /* ADC1 Init */
 115:Src/adc.c     ****     hdma_adc1.Instance = DMA1_Channel1;
 116:Src/adc.c     ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 117:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 118:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 119:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 120:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 121:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 122:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 123:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 124:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 125:Src/adc.c     ****     {
 126:Src/adc.c     ****       Error_Handler();
 127:Src/adc.c     ****     }
 128:Src/adc.c     **** 
 129:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 130:Src/adc.c     **** 
 131:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 132:Src/adc.c     **** 
ARM GAS  /tmp/ccBDX3d5.s 			page 8


 133:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 134:Src/adc.c     ****   }
 135:Src/adc.c     **** }
 267              		.loc 1 135 1 view .LVU86
 268 0018 08B0     		add	sp, sp, #32
 269              	.LCFI6:
 270              		.cfi_remember_state
 271              		.cfi_def_cfa_offset 8
 272              		@ sp needed
 273 001a 10BD     		pop	{r4, pc}
 274              	.LVL11:
 275              	.L17:
 276              	.LCFI7:
 277              		.cfi_restore_state
 278              		.loc 1 135 1 view .LVU87
 279 001c 0446     		mov	r4, r0
 101:Src/adc.c     ****   
 280              		.loc 1 101 5 is_stmt 1 view .LVU88
 281              	.LBB2:
 101:Src/adc.c     ****   
 282              		.loc 1 101 5 view .LVU89
 101:Src/adc.c     ****   
 283              		.loc 1 101 5 view .LVU90
 284 001e 03F17043 		add	r3, r3, #-268435456
 285 0022 03F50433 		add	r3, r3, #135168
 286 0026 DA6C     		ldr	r2, [r3, #76]
 287 0028 42F40052 		orr	r2, r2, #8192
 288 002c DA64     		str	r2, [r3, #76]
 101:Src/adc.c     ****   
 289              		.loc 1 101 5 view .LVU91
 290 002e DA6C     		ldr	r2, [r3, #76]
 291 0030 02F40052 		and	r2, r2, #8192
 292 0034 0192     		str	r2, [sp, #4]
 101:Src/adc.c     ****   
 293              		.loc 1 101 5 view .LVU92
 294 0036 019A     		ldr	r2, [sp, #4]
 295              	.LBE2:
 103:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 296              		.loc 1 103 5 view .LVU93
 297              	.LBB3:
 103:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 298              		.loc 1 103 5 view .LVU94
 103:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 299              		.loc 1 103 5 view .LVU95
 300 0038 DA6C     		ldr	r2, [r3, #76]
 301 003a 42F00102 		orr	r2, r2, #1
 302 003e DA64     		str	r2, [r3, #76]
 103:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 303              		.loc 1 103 5 view .LVU96
 304 0040 DB6C     		ldr	r3, [r3, #76]
 305 0042 03F00103 		and	r3, r3, #1
 306 0046 0293     		str	r3, [sp, #8]
 103:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 307              		.loc 1 103 5 view .LVU97
 308 0048 029B     		ldr	r3, [sp, #8]
 309              	.LBE3:
 108:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
ARM GAS  /tmp/ccBDX3d5.s 			page 9


 310              		.loc 1 108 5 view .LVU98
 108:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 311              		.loc 1 108 25 is_stmt 0 view .LVU99
 312 004a 0323     		movs	r3, #3
 313 004c 0393     		str	r3, [sp, #12]
 109:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 314              		.loc 1 109 5 is_stmt 1 view .LVU100
 109:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 315              		.loc 1 109 26 is_stmt 0 view .LVU101
 316 004e 0493     		str	r3, [sp, #16]
 110:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 317              		.loc 1 110 5 is_stmt 1 view .LVU102
 111:Src/adc.c     **** 
 318              		.loc 1 111 5 view .LVU103
 319 0050 03A9     		add	r1, sp, #12
 320 0052 4FF09040 		mov	r0, #1207959552
 321              	.LVL12:
 111:Src/adc.c     **** 
 322              		.loc 1 111 5 is_stmt 0 view .LVU104
 323 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 324              	.LVL13:
 115:Src/adc.c     ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 325              		.loc 1 115 5 is_stmt 1 view .LVU105
 115:Src/adc.c     ****     hdma_adc1.Init.Request = DMA_REQUEST_ADC1;
 326              		.loc 1 115 24 is_stmt 0 view .LVU106
 327 005a 0E48     		ldr	r0, .L19
 328 005c 0E4B     		ldr	r3, .L19+4
 329 005e 0360     		str	r3, [r0]
 116:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 330              		.loc 1 116 5 is_stmt 1 view .LVU107
 116:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 331              		.loc 1 116 28 is_stmt 0 view .LVU108
 332 0060 0523     		movs	r3, #5
 333 0062 4360     		str	r3, [r0, #4]
 117:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 334              		.loc 1 117 5 is_stmt 1 view .LVU109
 117:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 335              		.loc 1 117 30 is_stmt 0 view .LVU110
 336 0064 0023     		movs	r3, #0
 337 0066 8360     		str	r3, [r0, #8]
 118:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 338              		.loc 1 118 5 is_stmt 1 view .LVU111
 118:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 339              		.loc 1 118 30 is_stmt 0 view .LVU112
 340 0068 C360     		str	r3, [r0, #12]
 119:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 341              		.loc 1 119 5 is_stmt 1 view .LVU113
 119:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 342              		.loc 1 119 27 is_stmt 0 view .LVU114
 343 006a 8022     		movs	r2, #128
 344 006c 0261     		str	r2, [r0, #16]
 120:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 345              		.loc 1 120 5 is_stmt 1 view .LVU115
 120:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 346              		.loc 1 120 40 is_stmt 0 view .LVU116
 347 006e 4FF48072 		mov	r2, #256
 348 0072 4261     		str	r2, [r0, #20]
ARM GAS  /tmp/ccBDX3d5.s 			page 10


 121:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 349              		.loc 1 121 5 is_stmt 1 view .LVU117
 121:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_NORMAL;
 350              		.loc 1 121 37 is_stmt 0 view .LVU118
 351 0074 4FF48062 		mov	r2, #1024
 352 0078 8261     		str	r2, [r0, #24]
 122:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 353              		.loc 1 122 5 is_stmt 1 view .LVU119
 122:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 354              		.loc 1 122 25 is_stmt 0 view .LVU120
 355 007a C361     		str	r3, [r0, #28]
 123:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 356              		.loc 1 123 5 is_stmt 1 view .LVU121
 123:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 357              		.loc 1 123 29 is_stmt 0 view .LVU122
 358 007c 0362     		str	r3, [r0, #32]
 124:Src/adc.c     ****     {
 359              		.loc 1 124 5 is_stmt 1 view .LVU123
 124:Src/adc.c     ****     {
 360              		.loc 1 124 9 is_stmt 0 view .LVU124
 361 007e FFF7FEFF 		bl	HAL_DMA_Init
 362              	.LVL14:
 124:Src/adc.c     ****     {
 363              		.loc 1 124 8 view .LVU125
 364 0082 18B9     		cbnz	r0, .L18
 365              	.L15:
 129:Src/adc.c     **** 
 366              		.loc 1 129 5 is_stmt 1 view .LVU126
 129:Src/adc.c     **** 
 367              		.loc 1 129 5 view .LVU127
 368 0084 034B     		ldr	r3, .L19
 369 0086 6365     		str	r3, [r4, #84]
 129:Src/adc.c     **** 
 370              		.loc 1 129 5 view .LVU128
 371 0088 9C62     		str	r4, [r3, #40]
 372              		.loc 1 135 1 is_stmt 0 view .LVU129
 373 008a C5E7     		b	.L13
 374              	.L18:
 126:Src/adc.c     ****     }
 375              		.loc 1 126 7 is_stmt 1 view .LVU130
 376 008c FFF7FEFF 		bl	Error_Handler
 377              	.LVL15:
 378 0090 F8E7     		b	.L15
 379              	.L20:
 380 0092 00BF     		.align	2
 381              	.L19:
 382 0094 00000000 		.word	hdma_adc1
 383 0098 08000240 		.word	1073872904
 384              		.cfi_endproc
 385              	.LFE407:
 387              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 388              		.align	1
 389              		.global	HAL_ADC_MspDeInit
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccBDX3d5.s 			page 11


 395              	HAL_ADC_MspDeInit:
 396              	.LVL16:
 397              	.LFB408:
 136:Src/adc.c     **** 
 137:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 138:Src/adc.c     **** {
 398              		.loc 1 138 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 139:Src/adc.c     **** 
 140:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 402              		.loc 1 140 3 view .LVU132
 403              		.loc 1 140 15 is_stmt 0 view .LVU133
 404 0000 0368     		ldr	r3, [r0]
 405              		.loc 1 140 5 view .LVU134
 406 0002 B3F1A04F 		cmp	r3, #1342177280
 407 0006 00D0     		beq	.L27
 408 0008 7047     		bx	lr
 409              	.L27:
 138:Src/adc.c     **** 
 410              		.loc 1 138 1 view .LVU135
 411 000a 10B5     		push	{r4, lr}
 412              	.LCFI8:
 413              		.cfi_def_cfa_offset 8
 414              		.cfi_offset 4, -8
 415              		.cfi_offset 14, -4
 416 000c 0446     		mov	r4, r0
 141:Src/adc.c     ****   {
 142:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 143:Src/adc.c     **** 
 144:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 145:Src/adc.c     ****     /* Peripheral clock disable */
 146:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_DISABLE();
 417              		.loc 1 146 5 is_stmt 1 view .LVU136
 418 000e 074A     		ldr	r2, .L28
 419 0010 D36C     		ldr	r3, [r2, #76]
 420 0012 23F40053 		bic	r3, r3, #8192
 421 0016 D364     		str	r3, [r2, #76]
 147:Src/adc.c     ****   
 148:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 149:Src/adc.c     ****     PA0     ------> ADC1_IN1
 150:Src/adc.c     ****     PA1     ------> ADC1_IN2 
 151:Src/adc.c     ****     */
 152:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, Vsen_Pin|Isen_Pin);
 422              		.loc 1 152 5 view .LVU137
 423 0018 0321     		movs	r1, #3
 424 001a 4FF09040 		mov	r0, #1207959552
 425              	.LVL17:
 426              		.loc 1 152 5 is_stmt 0 view .LVU138
 427 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 428              	.LVL18:
 153:Src/adc.c     **** 
 154:Src/adc.c     ****     /* ADC1 DMA DeInit */
 155:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 429              		.loc 1 155 5 is_stmt 1 view .LVU139
 430 0022 606D     		ldr	r0, [r4, #84]
ARM GAS  /tmp/ccBDX3d5.s 			page 12


 431 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 432              	.LVL19:
 156:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 157:Src/adc.c     **** 
 158:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 159:Src/adc.c     ****   }
 160:Src/adc.c     **** } 
 433              		.loc 1 160 1 is_stmt 0 view .LVU140
 434 0028 10BD     		pop	{r4, pc}
 435              	.LVL20:
 436              	.L29:
 437              		.loc 1 160 1 view .LVU141
 438 002a 00BF     		.align	2
 439              	.L28:
 440 002c 00100240 		.word	1073876992
 441              		.cfi_endproc
 442              	.LFE408:
 444              		.comm	hdma_adc1,96,4
 445              		.comm	hadc1,108,4
 446              		.text
 447              	.Letext0:
 448              		.file 2 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_t
 449              		.file 3 "/home/alex/opt/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 450              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 451              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 452              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 453              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 454              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 455              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 456              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 457              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 458              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
 459              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 460              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 461              		.file 15 "Inc/adc.h"
 462              		.file 16 "Inc/main.h"
 463              		.file 17 "<built-in>"
ARM GAS  /tmp/ccBDX3d5.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccBDX3d5.s:18     .text.MX_ADC1_Init:0000000000000000 $t
     /tmp/ccBDX3d5.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
     /tmp/ccBDX3d5.s:222    .text.MX_ADC1_Init:00000000000000bc $d
                            *COM*:000000000000006c hadc1
     /tmp/ccBDX3d5.s:228    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccBDX3d5.s:235    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccBDX3d5.s:382    .text.HAL_ADC_MspInit:0000000000000094 $d
                            *COM*:0000000000000060 hdma_adc1
     /tmp/ccBDX3d5.s:388    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccBDX3d5.s:395    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccBDX3d5.s:440    .text.HAL_ADC_MspDeInit:000000000000002c $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
